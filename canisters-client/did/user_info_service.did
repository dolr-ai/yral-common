type Result = variant { Ok; Err : text };
type Result_1 = variant { Ok : UserProfileDetailsForFrontendV3; Err : text };
type Result_2 = variant { Ok : SessionType; Err : text };
type SessionType = variant { AnonymousSession; RegisteredSession };
type UserInfoServiceInitArgs = record { version : text };
type UserProfileDetailsForFrontendV3 = record {
  profile_picture_url : opt text;
  principal_id : principal;
  profile_stats : UserProfileGlobalStats;
};
type UserProfileGlobalStats = record {
  hot_bets_received : nat64;
  not_bets_received : nat64;
};
service : (UserInfoServiceInitArgs) -> {
  accept_new_user_registration : (principal) -> (Result);
  delete_user_info : (principal) -> (Result);
  get_user_profile_details : (principal) -> (Result_1) query;
  get_user_session_type : (principal) -> (Result_2) query;
  get_version : () -> (text) query;
  register_new_user : () -> (Result);
  update_session_type : (principal, SessionType) -> (Result);
  update_user_last_access_time : (principal) -> (Result);
}
